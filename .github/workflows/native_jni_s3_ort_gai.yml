name: Native JNI S3 onnxruntime-genai

on:
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  build-pytorch-jni-linux:
    if: github.repository == 'deepjavalibrary/djl'
    runs-on: ubuntu-latest
    container: nvidia/cuda:12.8.1-devel-ubuntu22.04
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'corretto'
          java-version: 17
      - name: Install Environment
        run: |
          apt-get update
          DEBIAN_FRONTEND=noninteractive apt-get install -y locales curl git unzip software-properties-common
          apt-get install -y python3-pip python3-distutils
          pip3 install awscli cmake
          ln -s /usr/local/bin/cmake /usr/bin/cmake
      - name: Build JNI
        shell: bash
        run: |
          cd engines/onnxruntime/onnxruntime-engine
          ./build_ort_genai.sh CUDA
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::425969335547:role/djl-ci-publish-role
          aws-region: us-east-2
      - name: Copy files to S3 with the AWS CLI
        run: |
          export ORT_GENAI_VERSION=$(awk -F '=' '/onnxruntimeGenai/ {gsub(/ ?"/, "", $2); print $2}' gradle/libs.versions.toml)
          aws s3 sync engines/onnxruntime/onnxruntime-engine/native s3://djl-ai/publish/onnxruntime-genai/${ORT_GENAI_VERSION}/
          aws cloudfront create-invalidation --distribution-id E371VB8JQ6NRVY --paths "/onnxruntime-genai/${ORT_GENAI_VERSION}/*"

  build-pytorch-jni-windows:
    if: github.repository == 'deepjavalibrary/djl'
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'corretto'
          java-version: 17
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11.x'
      - name: Setup VCPKG
        uses: microsoft/onnxruntime-github-actions/setup-build-tools@v0.0.6
        with:
          vcpkg-version: '2025.03.19'
          vcpkg-hash: '17e96169cd3f266c4716fcdc1bb728e6a64f103941ece463a2834d50694eba4fb48f30135503fd466402afa139abc847ef630733c442595d1c34979f261b0114'
          cmake-version: '3.31.6'
          cmake-hash: '0f1584e8666cf4a65ec514bd02afe281caabf1d45d2c963f3151c41484f457386aa03273ab25776a670be02725354ce0b46f3a5121857416da37366342a833a0'
          add-cmake-to-path: 'true'
          disable-terrapin: 'false'
      - name: Setup Visual Studio 2022
        uses: microsoft/setup-msbuild@v1.1
        with:
          vs-version: '17.5'
      - name: Build JNI
        shell: bash
        run: |
          engines/onnxruntime/onnxruntime-engine/build_ort_genai.sh
      - name: Configure Deployment AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::425969335547:role/djl-ci-publish-role
          aws-region: us-east-2
      - name: Copy files to S3 with the AWS CLI
        shell: bash
        run: |
          export ORT_GENAI_VERSION=$(awk -F '=' '/onnxruntimeGenai/ {gsub(/ ?"/, "", $2); print $2}' gradle/libs.versions.toml)
          aws s3 sync engines/onnxruntime/onnxruntime-engine/native s3://djl-ai/publish/onnxruntime-genai/${ORT_GENAI_VERSION}/
          aws cloudfront create-invalidation --distribution-id E371VB8JQ6NRVY --paths "/onnxruntime-genai/${ORT_GENAI_VERSION}/*"

  build-pytorch-jni-arm64-macos:
    if: github.repository == 'deepjavalibrary/djl'
    runs-on: macos-latest-xlarge
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: corretto
          architecture: aarch64
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11.x'
      - name: Build JNI
        shell: bash
        run: |
          cd engines/onnxruntime/onnxruntime-engine
          ./build_ort_genai.sh
      - name: Configure Deployment AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::425969335547:role/djl-ci-publish-role
          aws-region: us-east-2
      - name: Copy files to S3 with the AWS CLI
        shell: bash
        run: |
          export ORT_GENAI_VERSION=$(awk -F '=' '/onnxruntimeGenai/ {gsub(/ ?"/, "", $2); print $2}' gradle/libs.versions.toml)
          aws s3 sync engines/onnxruntime/onnxruntime-engine/native s3://djl-ai/publish/onnxruntime-genai/${ORT_GENAI_VERSION}/
          aws cloudfront create-invalidation --distribution-id E371VB8JQ6NRVY --paths "/onnxruntime-genai/${ORT_GENAI_VERSION}/*"
